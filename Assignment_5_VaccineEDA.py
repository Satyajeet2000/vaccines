# -*- coding: utf-8 -*-
"""VaccineData_EDA.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1MAOIfQkrWtVdrOLqNMlufUR1FdM0Quu9
"""

import pandas as pd
import matplotlib.pyplot as plt

url = "https://raw.githubusercontent.com/ds5010/spring-2022/main/data/merge.csv"
df = pd.read_csv(url, converters={'FIPS' : str})
df

#[MR] Define labels and assign x,y values
xlabel = 'Series_Complete_18PlusPop_Pct'
ylabel = "Deaths"

x = df[xlabel]
y = df[ylabel]

#[MR] Plot % of fully vaccinated 18+ population data against deaths
plt.scatter(x, y, alpha=0.5)
ax = plt.gcf().axes[0]
ax.set(xlabel=xlabel, ylabel=ylabel)
plt.show()

#[MR] Define labels and assign x,y values
xlabel = 'Census2019_18PlusPop'
ylabel = "Deaths"

x = df[xlabel]
y = df[ylabel]

#[MR] Plot Census2019 18+ population data against deaths
plt.scatter(x, y, alpha=0.5)
ax = plt.gcf().axes[0]
ax.set(xlabel=xlabel, ylabel=ylabel)
plt.show()

#[MR] Create column in dataframe to get ratio of deaths to total population
#[MR] Plot fully vaccinated 18+ population against deaths per 100,000
df['Deaths_Per_1e5'] = df['Deaths'] / df['Census2019_18PlusPop'] * 1e5
xlabel = 'Series_Complete_18PlusPop_Pct'
ylabel = 'Deaths_Per_1e5'
x = df[xlabel]
plt.xlabel(xlabel)
plt.ylabel(ylabel)
y = df[ylabel]
plt.xlim(0,100)
plt.ylim(0,500)
plt.scatter(x, y, alpha=0.25)
plt.show()

#[MR] Plot fully vaccinated 18+ population against deaths per 100,000
xlabel = 'Series_Complete_18PlusPop_Pct' 
ylabel = 'Deaths_Per_1e5'

plt.figure(figsize=(10,10))
plt.scatter(
    x = df[xlabel], 
    y = df[ylabel], 
    s=df['Census2019_18PlusPop']/2000, # [MR] Plots bubble size based on population. Divided by 2000 to fit on plot area
    c='blue', 
    cmap="Accent", 
    alpha=0.5, 
    edgecolors="white", 
    linewidth=2);
plt.title("% of pop 18+ vaccinated vs. deaths by total population")
ax = plt.gcf().axes[0]
ax.set(xlabel=xlabel, ylabel=ylabel)
plt.ylim(0,500)
plt.xlim(0,)
plt.show()